plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.artfriendly'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// OAuth2 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// jjwt 라이브러리
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly	'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// 캐싱
	implementation 'com.github.ben-manes.caffeine:caffeine:3.0.0'

	// mapstruct 라이브러리
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// AWS S3 라이브러리
	implementation 'io.awspring.cloud:spring-cloud-aws-s3:3.0.2'

	// xml 바인딩 라이브러리
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
	runtimeOnly 'com.sun.xml.bind:jaxb-impl:4.0.0'

}

tasks.named('test') {
	useJUnitPlatform()
}
// 중복 파일의 경우 제외한다
bootJar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}